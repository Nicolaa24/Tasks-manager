{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  users: []\n};\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    addNewUser: (state, action) => {\n      state.users.push(action.payload); // localStorage.setItem(\"users\", JSON.stringify(state.users));\n      // localStorage.setItem(\n      //   \"users\",\n      //   (state.users = [\n      //     ...state.users,\n      //     {\n      //       id: new Date().toISOString(),\n      //       email: action.payload.email,\n      //       login: action.payload.login,\n      //       password: action.payload.password,\n      //     },\n      //   ])\n      // );\n    },\n    cheackUniqUsers: (state, action) => {\n      const isUserExist = state.users.find(item => item.email === action.payload.email);\n\n      if (isUserExist) {\n        alert(\"Such a user is already registered\");\n        return false;\n      } else {\n        state.users.push(action.payload); // const storedUsers = JSON.parse(localStorage.getItem(\"users\"));\n        // localStorage.setItem(\"users\", JSON.stringify([...storedUsers, obj]));\n\n        localStorage.setItem(\"users\", JSON.stringify(state.users));\n        return true;\n      }\n    }\n  }\n});\nexport default registerSlice.reducer;\nexport const {\n  addNewUser,\n  cheackUniqUsers\n} = registerSlice.actions;\nexport const selectUsers = state => state.register.users;","map":{"version":3,"names":["createSlice","initialState","users","registerSlice","name","reducers","addNewUser","state","action","push","payload","cheackUniqUsers","isUserExist","find","item","email","alert","localStorage","setItem","JSON","stringify","reducer","actions","selectUsers","register"],"sources":["/Users/kolamaksimiv/Documents/VsCode/React/testWorkUp/testApp/my-app/src/store/slices/RegisterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  users: [],\n};\n\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    addNewUser: (state, action) => {\n      state.users.push(action.payload);\n      // localStorage.setItem(\"users\", JSON.stringify(state.users));\n      // localStorage.setItem(\n      //   \"users\",\n      //   (state.users = [\n      //     ...state.users,\n      //     {\n      //       id: new Date().toISOString(),\n      //       email: action.payload.email,\n      //       login: action.payload.login,\n      //       password: action.payload.password,\n      //     },\n      //   ])\n      // );\n    },\n    cheackUniqUsers: (state, action) => {\n      const isUserExist = state.users.find(\n        (item) => item.email === action.payload.email\n      );\n\n      if (isUserExist) {\n        alert(\"Such a user is already registered\");\n        return false;\n      } else {\n        state.users.push(action.payload);\n        // const storedUsers = JSON.parse(localStorage.getItem(\"users\"));\n        // localStorage.setItem(\"users\", JSON.stringify([...storedUsers, obj]));\n        localStorage.setItem(\"users\", JSON.stringify(state.users));\n        return true;\n      }\n    },\n  },\n});\n\nexport default registerSlice.reducer;\n\nexport const { addNewUser, cheackUniqUsers } = registerSlice.actions;\n\nexport const selectUsers = (state) => state.register.users;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;AAIA,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,UAD0B;EAEhCH,YAFgC;EAGhCI,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiBD,MAAM,CAACE,OAAxB,EAD6B,CAE7B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAhBO;IAiBRC,eAAe,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAClC,MAAMI,WAAW,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CACjBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeP,MAAM,CAACE,OAAP,CAAeK,KADtB,CAApB;;MAIA,IAAIH,WAAJ,EAAiB;QACfI,KAAK,CAAC,mCAAD,CAAL;QACA,OAAO,KAAP;MACD,CAHD,MAGO;QACLT,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiBD,MAAM,CAACE,OAAxB,EADK,CAEL;QACA;;QACAO,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACL,KAArB,CAA9B;QACA,OAAO,IAAP;MACD;IACF;EAhCO;AAHsB,CAAD,CAAjC;AAuCA,eAAeC,aAAa,CAACkB,OAA7B;AAEA,OAAO,MAAM;EAAEf,UAAF;EAAcK;AAAd,IAAkCR,aAAa,CAACmB,OAAtD;AAEP,OAAO,MAAMC,WAAW,GAAIhB,KAAD,IAAWA,KAAK,CAACiB,QAAN,CAAetB,KAA9C"},"metadata":{},"sourceType":"module"}