{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { usersAPI } from \"../../API.service\";\nconst initialState = {\n  isLoggedIn: false,\n  currentUser: {}\n};\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    logIn: (state, action) => {\n      const isLoggedIn = usersAPI.logIn(action.payload);\n\n      if (isLoggedIn) {\n        state.isLoggedIn = true;\n        state.currentUser = action.payload;\n      } else {\n        state.isLoggedIn = initialState.isLoggedIn;\n        state.currentUser = initialState.currentUser;\n      }\n    },\n    logOut: (state, action) => {\n      usersAPI.logOut();\n      state.isLoggedIn = initialState.isLoggedIn;\n      state.currentUser = initialState.currentUser;\n    },\n    checkAuthenticated: (state, action) => {\n      const currentUser = usersAPI.getCurrentUser();\n\n      if (currentUser) {\n        state.isLoggedIn = true;\n        state.currentUser = currentUser;\n      }\n    }\n  }\n});\nexport default loginSlice.reducer;\nexport const {\n  logIn,\n  logOut,\n  checkAuthenticated\n} = loginSlice.actions;\nexport const getIsLoggedInSelector = state => state.login.isLoggedIn;","map":{"version":3,"names":["createSlice","usersAPI","initialState","isLoggedIn","currentUser","loginSlice","name","reducers","logIn","state","action","payload","logOut","checkAuthenticated","getCurrentUser","reducer","actions","getIsLoggedInSelector","login"],"sources":["/Users/kolamaksimiv/Documents/VsCode/React/testWorkUp/testApp/my-app/src/store/slices/LoginSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { usersAPI } from \"../../API.service\";\n\nconst initialState = {\n  isLoggedIn: false,\n  currentUser: {},\n};\n\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    logIn: (state, action) => {\n      const isLoggedIn = usersAPI.logIn(action.payload);\n      if (isLoggedIn) {\n        state.isLoggedIn = true;\n        state.currentUser = action.payload;\n      } else {\n        state.isLoggedIn = initialState.isLoggedIn;\n        state.currentUser = initialState.currentUser;\n      }\n    },\n    logOut: (state, action) => {\n      usersAPI.logOut();\n      state.isLoggedIn = initialState.isLoggedIn;\n      state.currentUser = initialState.currentUser;\n    },\n    checkAuthenticated: (state, action) => {\n      const currentUser = usersAPI.getCurrentUser();\n\n      if (currentUser) {\n        state.isLoggedIn = true;\n        state.currentUser = currentUser;\n      }\n    },\n  },\n});\n\nexport default loginSlice.reducer;\nexport const { logIn, logOut, checkAuthenticated } = loginSlice.actions;\n\nexport const getIsLoggedInSelector = (state) => state.login.isLoggedIn;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KADO;EAEnBC,WAAW,EAAE;AAFM,CAArB;AAKA,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,OADuB;EAE7BJ,YAF6B;EAG7BK,QAAQ,EAAE;IACRC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxB,MAAMP,UAAU,GAAGF,QAAQ,CAACO,KAAT,CAAeE,MAAM,CAACC,OAAtB,CAAnB;;MACA,IAAIR,UAAJ,EAAgB;QACdM,KAAK,CAACN,UAAN,GAAmB,IAAnB;QACAM,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAA3B;MACD,CAHD,MAGO;QACLF,KAAK,CAACN,UAAN,GAAmBD,YAAY,CAACC,UAAhC;QACAM,KAAK,CAACL,WAAN,GAAoBF,YAAY,CAACE,WAAjC;MACD;IACF,CAVO;IAWRQ,MAAM,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MACzBT,QAAQ,CAACW,MAAT;MACAH,KAAK,CAACN,UAAN,GAAmBD,YAAY,CAACC,UAAhC;MACAM,KAAK,CAACL,WAAN,GAAoBF,YAAY,CAACE,WAAjC;IACD,CAfO;IAgBRS,kBAAkB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACrC,MAAMN,WAAW,GAAGH,QAAQ,CAACa,cAAT,EAApB;;MAEA,IAAIV,WAAJ,EAAiB;QACfK,KAAK,CAACN,UAAN,GAAmB,IAAnB;QACAM,KAAK,CAACL,WAAN,GAAoBA,WAApB;MACD;IACF;EAvBO;AAHmB,CAAD,CAA9B;AA8BA,eAAeC,UAAU,CAACU,OAA1B;AACA,OAAO,MAAM;EAAEP,KAAF;EAASI,MAAT;EAAiBC;AAAjB,IAAwCR,UAAU,CAACW,OAAzD;AAEP,OAAO,MAAMC,qBAAqB,GAAIR,KAAD,IAAWA,KAAK,CAACS,KAAN,CAAYf,UAArD"},"metadata":{},"sourceType":"module"}