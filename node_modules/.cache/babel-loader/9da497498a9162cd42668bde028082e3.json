{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  users: []\n};\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    addNewUser: (state, action) => {\n      state.users.push(action.payload);\n      localStorage.setItem(\"users\", JSON.stringify(state.users));\n    },\n    cheackUniqueUsers: (state, action) => {\n      const isUserExist = state.users.find(item => item.email === action.payload.email);\n      console.log(action.payload.password);\n\n      if (isUserExist) {\n        alert(\"Such a user is already registered\");\n        return false;\n      } else {\n        state.users = [...state.users, action.payload];\n        const storedUsers = JSON.parse(localStorage.getItem(\"users\"));\n        localStorage.setItem(\"users\", JSON.stringify([...storedUsers, action.payload]));\n        return true;\n      }\n    }\n  }\n});\nexport default registerSlice.reducer;\nexport const {\n  addNewUser,\n  cheackUniqUsers\n} = registerSlice.actions;\nexport const selectUsers = state => state.register.users;","map":{"version":3,"names":["createSlice","initialState","users","registerSlice","name","reducers","addNewUser","state","action","push","payload","localStorage","setItem","JSON","stringify","cheackUniqueUsers","isUserExist","find","item","email","console","log","password","alert","storedUsers","parse","getItem","reducer","cheackUniqUsers","actions","selectUsers","register"],"sources":["/Users/kolamaksimiv/Documents/VsCode/React/testWorkUp/testApp/my-app/src/store/slices/RegisterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  users: [],\n};\n\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    addNewUser: (state, action) => {\n      state.users.push(action.payload);\n      localStorage.setItem(\"users\", JSON.stringify(state.users));\n    },\n    cheackUniqueUsers: (state, action) => {\n      const isUserExist = state.users.find(\n        (item) => item.email === action.payload.email\n      );\n      console.log(action.payload.password);\n\n      if (isUserExist) {\n        alert(\"Such a user is already registered\");\n        return false;\n      } else {\n        state.users = [...state.users, action.payload];\n        const storedUsers = JSON.parse(localStorage.getItem(\"users\"));\n        localStorage.setItem(\n          \"users\",\n          JSON.stringify([...storedUsers, action.payload])\n        );\n        return true;\n      }\n    },\n  },\n});\n\nexport default registerSlice.reducer;\n\nexport const { addNewUser, cheackUniqUsers } = registerSlice.actions;\n\nexport const selectUsers = (state) => state.register.users;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;AAIA,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,UAD0B;EAEhCH,YAFgC;EAGhCI,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;MACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeP,KAAK,CAACL,KAArB,CAA9B;IACD,CAJO;IAKRa,iBAAiB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MACpC,MAAMQ,WAAW,GAAGT,KAAK,CAACL,KAAN,CAAYe,IAAZ,CACjBC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeX,MAAM,CAACE,OAAP,CAAeS,KADtB,CAApB;MAGAC,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACE,OAAP,CAAeY,QAA3B;;MAEA,IAAIN,WAAJ,EAAiB;QACfO,KAAK,CAAC,mCAAD,CAAL;QACA,OAAO,KAAP;MACD,CAHD,MAGO;QACLhB,KAAK,CAACL,KAAN,GAAc,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACE,OAAxB,CAAd;QACA,MAAMc,WAAW,GAAGX,IAAI,CAACY,KAAL,CAAWd,YAAY,CAACe,OAAb,CAAqB,OAArB,CAAX,CAApB;QACAf,YAAY,CAACC,OAAb,CACE,OADF,EAEEC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAGU,WAAJ,EAAiBhB,MAAM,CAACE,OAAxB,CAAf,CAFF;QAIA,OAAO,IAAP;MACD;IACF;EAvBO;AAHsB,CAAD,CAAjC;AA8BA,eAAeP,aAAa,CAACwB,OAA7B;AAEA,OAAO,MAAM;EAAErB,UAAF;EAAcsB;AAAd,IAAkCzB,aAAa,CAAC0B,OAAtD;AAEP,OAAO,MAAMC,WAAW,GAAIvB,KAAD,IAAWA,KAAK,CAACwB,QAAN,CAAe7B,KAA9C"},"metadata":{},"sourceType":"module"}