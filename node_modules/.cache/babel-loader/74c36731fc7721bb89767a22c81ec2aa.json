{"ast":null,"code":"import { StorageService } from \"./storage.service\";\n\nclass UsersAPI extends StorageService {\n  constructor() {\n    super();\n  }\n\n  isLoggedIn() {\n    return this.get(\"isLoggedIn\") ? true : false;\n  }\n\n  getUsers() {\n    return this.get(\"users\");\n  }\n\n  getUser(user) {\n    const users = this.getUsers();\n    const findUser = users.find(storedUsers => storedUsers.email === user.email);\n    return findUser;\n  }\n\n  setLoggedIn(payload) {\n    this.set(\"isLoggedIn\", payload);\n  }\n\n  addNewUser(user) {\n    const isUserExists = this.checkUniqueUser(user);\n    if (isUserExists) return false;\n    const users = this.getUsers();\n\n    if (users) {\n      this.set(\"users\", [...users, user]);\n    } else {\n      this.set(\"users\", [user]);\n    }\n\n    return true;\n  }\n\n  checkUniqueUser(user) {\n    const users = this.getUsers();\n    if (!users) return false;\n    return users.find(storedUser => storedUser.email === user.email);\n  }\n\n  validateCredentials(user) {\n    const getUser = this.getUser(user);\n    if (!getUser) return false;\n    const isCredentialsValid = user.email === getUser.email && user.password === getUser.password;\n    return isCredentialsValid;\n  }\n\n  logIn(user) {\n    const isCredentialsValid = this.validateCredentials(user);\n\n    if (isCredentialsValid) {\n      this.set(\"currentUser\", user);\n      return true;\n    }\n\n    return false;\n  }\n\n  logOut() {\n    this.delete(\"currentUser\");\n  }\n\n  getCurrentUser() {\n    return this.get(\"currentUser\");\n  }\n\n}\n\nconst usersAPI = new UsersAPI();\nexport { usersAPI };","map":{"version":3,"names":["StorageService","UsersAPI","constructor","isLoggedIn","get","getUsers","getUser","user","users","findUser","find","storedUsers","email","setLoggedIn","payload","set","addNewUser","isUserExists","checkUniqueUser","storedUser","validateCredentials","isCredentialsValid","password","logIn","logOut","delete","getCurrentUser","usersAPI"],"sources":["/Users/kolamaksimiv/Documents/VsCode/React/testWorkUp/testApp/my-app/src/API.service.js"],"sourcesContent":["import { StorageService } from \"./storage.service\";\n\nclass UsersAPI extends StorageService {\n  constructor() {\n    super();\n  }\n\n  isLoggedIn() {\n    return this.get(\"isLoggedIn\") ? true : false;\n  }\n\n  getUsers() {\n    return this.get(\"users\");\n  }\n\n  getUser(user) {\n    const users = this.getUsers();\n    const findUser = users.find(\n      (storedUsers) => storedUsers.email === user.email\n    );\n    return findUser;\n  }\n\n  setLoggedIn(payload) {\n    this.set(\"isLoggedIn\", payload);\n  }\n\n  addNewUser(user) {\n    const isUserExists = this.checkUniqueUser(user);\n    if (isUserExists) return false;\n\n    const users = this.getUsers();\n    if (users) {\n      this.set(\"users\", [...users, user]);\n    } else {\n      this.set(\"users\", [user]);\n    }\n\n    return true;\n  }\n\n  checkUniqueUser(user) {\n    const users = this.getUsers();\n    if (!users) return false;\n    return users.find((storedUser) => storedUser.email === user.email);\n  }\n\n  validateCredentials(user) {\n    const getUser = this.getUser(user);\n    if (!getUser) return false;\n    const isCredentialsValid =\n      user.email === getUser.email && user.password === getUser.password;\n    return isCredentialsValid;\n  }\n\n  logIn(user) {\n    const isCredentialsValid = this.validateCredentials(user);\n    if (isCredentialsValid) {\n      this.set(\"currentUser\", user);\n      return true;\n    }\n    return false;\n  }\n\n  logOut() {\n    this.delete(\"currentUser\");\n  }\n\n  getCurrentUser() {\n    return this.get(\"currentUser\");\n  }\n}\n\nconst usersAPI = new UsersAPI();\n\nexport { usersAPI };\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,QAAN,SAAuBD,cAAvB,CAAsC;EACpCE,WAAW,GAAG;IACZ;EACD;;EAEDC,UAAU,GAAG;IACX,OAAO,KAAKC,GAAL,CAAS,YAAT,IAAyB,IAAzB,GAAgC,KAAvC;EACD;;EAEDC,QAAQ,GAAG;IACT,OAAO,KAAKD,GAAL,CAAS,OAAT,CAAP;EACD;;EAEDE,OAAO,CAACC,IAAD,EAAO;IACZ,MAAMC,KAAK,GAAG,KAAKH,QAAL,EAAd;IACA,MAAMI,QAAQ,GAAGD,KAAK,CAACE,IAAN,CACdC,WAAD,IAAiBA,WAAW,CAACC,KAAZ,KAAsBL,IAAI,CAACK,KAD7B,CAAjB;IAGA,OAAOH,QAAP;EACD;;EAEDI,WAAW,CAACC,OAAD,EAAU;IACnB,KAAKC,GAAL,CAAS,YAAT,EAAuBD,OAAvB;EACD;;EAEDE,UAAU,CAACT,IAAD,EAAO;IACf,MAAMU,YAAY,GAAG,KAAKC,eAAL,CAAqBX,IAArB,CAArB;IACA,IAAIU,YAAJ,EAAkB,OAAO,KAAP;IAElB,MAAMT,KAAK,GAAG,KAAKH,QAAL,EAAd;;IACA,IAAIG,KAAJ,EAAW;MACT,KAAKO,GAAL,CAAS,OAAT,EAAkB,CAAC,GAAGP,KAAJ,EAAWD,IAAX,CAAlB;IACD,CAFD,MAEO;MACL,KAAKQ,GAAL,CAAS,OAAT,EAAkB,CAACR,IAAD,CAAlB;IACD;;IAED,OAAO,IAAP;EACD;;EAEDW,eAAe,CAACX,IAAD,EAAO;IACpB,MAAMC,KAAK,GAAG,KAAKH,QAAL,EAAd;IACA,IAAI,CAACG,KAAL,EAAY,OAAO,KAAP;IACZ,OAAOA,KAAK,CAACE,IAAN,CAAYS,UAAD,IAAgBA,UAAU,CAACP,KAAX,KAAqBL,IAAI,CAACK,KAArD,CAAP;EACD;;EAEDQ,mBAAmB,CAACb,IAAD,EAAO;IACxB,MAAMD,OAAO,GAAG,KAAKA,OAAL,CAAaC,IAAb,CAAhB;IACA,IAAI,CAACD,OAAL,EAAc,OAAO,KAAP;IACd,MAAMe,kBAAkB,GACtBd,IAAI,CAACK,KAAL,KAAeN,OAAO,CAACM,KAAvB,IAAgCL,IAAI,CAACe,QAAL,KAAkBhB,OAAO,CAACgB,QAD5D;IAEA,OAAOD,kBAAP;EACD;;EAEDE,KAAK,CAAChB,IAAD,EAAO;IACV,MAAMc,kBAAkB,GAAG,KAAKD,mBAAL,CAAyBb,IAAzB,CAA3B;;IACA,IAAIc,kBAAJ,EAAwB;MACtB,KAAKN,GAAL,CAAS,aAAT,EAAwBR,IAAxB;MACA,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EAEDiB,MAAM,GAAG;IACP,KAAKC,MAAL,CAAY,aAAZ;EACD;;EAEDC,cAAc,GAAG;IACf,OAAO,KAAKtB,GAAL,CAAS,aAAT,CAAP;EACD;;AApEmC;;AAuEtC,MAAMuB,QAAQ,GAAG,IAAI1B,QAAJ,EAAjB;AAEA,SAAS0B,QAAT"},"metadata":{},"sourceType":"module"}