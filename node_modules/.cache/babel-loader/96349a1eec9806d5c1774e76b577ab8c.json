{"ast":null,"code":"var _localStorage$getItem;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { usersAPI } from \"../../API.service\";\nconst initialState = {\n  users: JSON.parse((_localStorage$getItem = localStorage.getItem(\"users\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"[]\")\n};\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    addNewUser: (state, action) => {\n      const isUserCreated = usersAPI.addNewUser(action.payload); // true || false\n\n      if (isUserCreated) {\n        state.users.push(action.payload);\n        alert(\"User has been created successfully!\");\n      } else {\n        alert(\"User is not created\");\n      }\n    }\n  }\n});\nexport default registerSlice.reducer;\nexport const {\n  addNewUser\n} = registerSlice.actions;\nexport const getRegisteredUsersSelector = state => state.register.users;","map":{"version":3,"names":["createSlice","usersAPI","initialState","users","JSON","parse","localStorage","getItem","registerSlice","name","reducers","addNewUser","state","action","isUserCreated","payload","push","alert","reducer","actions","getRegisteredUsersSelector","register"],"sources":["/Users/kolamaksimiv/Documents/VsCode/React/testWorkUp/testApp/my-app/src/store/slices/RegisterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { usersAPI } from \"../../API.service\";\n\nconst initialState = {\n  users: JSON.parse(localStorage.getItem(\"users\") ?? \"[]\"),\n};\n\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    addNewUser: (state, action) => {\n      const isUserCreated = usersAPI.addNewUser(action.payload); // true || false\n      if (isUserCreated) {\n        state.users.push(action.payload);\n        alert(\"User has been created successfully!\");\n      } else {\n        alert(\"User is not created\");\n      }\n    },\n  },\n});\n\nexport default registerSlice.reducer;\n\nexport const { addNewUser } = registerSlice.actions;\n\nexport const getRegisteredUsersSelector = (state) => state.register.users;\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,IAAI,CAACC,KAAL,0BAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,yEAA4C,IAA5C;AADY,CAArB;AAIA,MAAMC,aAAa,GAAGR,WAAW,CAAC;EAChCS,IAAI,EAAE,UAD0B;EAEhCP,YAFgC;EAGhCQ,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7B,MAAMC,aAAa,GAAGb,QAAQ,CAACU,UAAT,CAAoBE,MAAM,CAACE,OAA3B,CAAtB,CAD6B,CAC8B;;MAC3D,IAAID,aAAJ,EAAmB;QACjBF,KAAK,CAACT,KAAN,CAAYa,IAAZ,CAAiBH,MAAM,CAACE,OAAxB;QACAE,KAAK,CAAC,qCAAD,CAAL;MACD,CAHD,MAGO;QACLA,KAAK,CAAC,qBAAD,CAAL;MACD;IACF;EATO;AAHsB,CAAD,CAAjC;AAgBA,eAAeT,aAAa,CAACU,OAA7B;AAEA,OAAO,MAAM;EAAEP;AAAF,IAAiBH,aAAa,CAACW,OAArC;AAEP,OAAO,MAAMC,0BAA0B,GAAIR,KAAD,IAAWA,KAAK,CAACS,QAAN,CAAelB,KAA7D"},"metadata":{},"sourceType":"module"}